/*
 * This file was generated by the Gradle 'init' task.
 */
buildscript {
    if (gradlePluginVersion != '') {
        dependencies {
            classpath "io.entframework:mybatis-generator-gradle-plugin:${gradlePluginVersion}"
        }
    }
}
plugins {
    id 'io.entframework.java-conventions'
}

if (gradlePluginVersion != '') {
    apply plugin: 'io.entframework.MybatisGenerator'
    mybatisGenerator {
        //verbose = false
        configFile = "${project.projectDir.absolutePath}/src/generator/mybatis-generator-config.xml"
        verbose = true
        overwrite = true
        contexts = 'MysqlContext'
        outputDirectory = "${project.projectDir.absolutePath}"
        properties = [
                'rootPackage': 'io.entframework.kernel.db.mds.example'
        ]
        dependencies {
            generator 'mysql:mysql-connector-java:8.0.22'
            generator "io.entframework:mybatis-generator-plugins:${gradlePluginVersion}"
            generator project(":kernel-d-db:db-api")
        }
    }
}

dependencies {
    
    api 'org.springframework.boot:spring-boot-starter-web'
    api project(':kernel-d-db:db-spring-boot-starter')
    api 'mysql:mysql-connector-java'

    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'com.fasterxml.jackson.core:jackson-core'
    api 'com.fasterxml.jackson.core:jackson-annotations'
    api 'com.google.guava:guava'
    api 'org.mapstruct:mapstruct'
    
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding'
    annotationProcessor 'org.mapstruct:mapstruct-processor'
    annotationProcessor 'org.atteo.classindex:classindex'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mapstruct:mapstruct'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor'
    testImplementation 'org.postgresql:postgresql:42.5.2'
}

test {
    useJUnitPlatform()
}

tasks.named("test") {
    jvmArgs += '--add-opens'
    jvmArgs += 'java.base/java.lang.reflect=ALL-UNNAMED'
}

description = 'db-mds-sample'
