<?xml version="1.0" encoding="UTF-8"?>
<docs>
    <doc key="leftJoinSelectOne" category="Mapper">
        <![CDATA[
<p>关联查询，返回一条记录</p>
<p>方法只是用Annotation定义了SelectProvider和ResultMap，不应该直接调用</p>
<p>调用入口leftJoinSelectOne(QueryExpressionDSL<SelectModel> queryExpressionDSL)</p>
@see {MapperName}#leftJoinSelectOne(QueryExpressionDSL)
]]>
    </doc>
    <doc key="leftJoinSelectMany" category="Mapper">
        <![CDATA[
<p>关联查询，返回多条记录，支持分页</p>
<p>方法只是用Annotation定义了SelectProvider和ResultMap，不应该直接调用</p>
<p>调用入口leftJoinSelect(QueryExpressionDSL<SelectModel> queryExpressionDSL)</p>
@see {MapperName}#leftJoinSelect(QueryExpressionDSL)
]]>
    </doc>
    <doc key="leftJoinSelect" category="Mapper" tag="default">
        <![CDATA[
关联查询，返回多条记录
]]>
    </doc>
    <doc key="leftJoinSelectOne" category="Mapper" tag="default">
        <![CDATA[
关联查询，返回一条记录
]]>
    </doc>
    <doc key="defaultDeleteDSL" category="Repository">
        <![CDATA[
<b>MyBatis Dynamic SQL 底层方法</b><br/><br/>
将Entity转换成DeleteDSLCompleter<br/>
DeleteDSLCompleter相当于Where查询条件，执行时会直接操作数据库<br/>
逻辑删除或者乐观锁会被直接跳过<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="insert" category="Repository" tag="StatementProvider">
        <![CDATA[
<b>MyBatis Dynamic SQL 底层方法</b><br/><br/>
InsertStatementProvider通常由Entity生成，最终生成Insert语句进行数据库操作<br/>
DeleteDSLCompleter相当于Where查询条件，执行时会直接操作数据库<br/>
逻辑删除或者乐观锁不会影响（这两个字段的初始化由框架的Interceptor）<br/>
<a href="https://mybatis.org/mybatis-dynamic-sql/docs/insert.html">官方文档</a><br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="update" category="Repository" tag="StatementProvider">
        <![CDATA[
<b>MyBatis Dynamic SQL 底层方法</b><br/><br/>
UpdateStatementProvider通常由Entity生成，最终生成Update语句进行数据库操作<br/>
逻辑删除或者乐观锁会受到影响，除非手动指定这两项值<br/>
<a href="https://mybatis.org/mybatis-dynamic-sql/docs/update.html">官方文档</a><br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="delete" category="Repository" tag="StatementProvider">
        <![CDATA[
<b>MyBatis Dynamic SQL 底层方法</b><br/><br/>
DeleteStatementProvider通常由Entity生成，最终生成Delete语句进行数据库操作<br/>
逻辑删除或者乐观锁会受到影响，因为这项操作是物理删除<br/>
<a href="https://mybatis.org/mybatis-dynamic-sql/docs/delete.html">官方文档</a><br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="defaultSelectDSL" category="Repository" tag="Pageable">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
将Entity转成SelectDSLCompleter，最终生成Select语句进行数据库操作<br/>
注意这是单表全字段查询，支持分页<br/>
支持逻辑删除，默认查询非删除状态的记录<br/>
<br/>
]]>
    </doc>
    <doc key="defaultSelectDSL" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
将Entity转成SelectDSLCompleter，最终生成Select语句进行数据库操作<br/>
<br/>
@see {RepositoryName}#defaultSelectDSL({EntityName}, Integer, Integer)
]]>
    </doc>
    <doc key="select" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据Entity转成的SelectDSLCompleter，查询符合条件的记录<br/>
注意这是单表全字段查询，支持支持分页<br/>
支持逻辑删除，默认查询非删除状态的记录<br/>
<br/>
@see {RepositoryName}#select({EntityName})
]]>
    </doc>
    <doc key="deleteById" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据主键ID删除记录<br/>
注意如果支持逻辑删除，只是更新逻辑删除标记位<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="delete" category="Repository" tag="Row">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据主键ID删除记录<br/>
注意如果支持逻辑删除，只是更新逻辑删除标记位<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="create" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据Entity生成Insert语句，插入数据库<br/>
支持逻辑删除或者乐观锁<br/>
支持多对一或者一对多关联插入<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="update" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据Entity生成Update语句，更新数据库<br/>
支持乐观锁<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="batchCreate" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
批量插入方法包装
<br/>
<b color="#99FF99">>>建议使用<<</b>
@see {RepositoryName}#create({EntityName})
]]>
    </doc>
    <doc key="get" category="Repository">
        <![CDATA[
<b>MyBatis 包装方法</b><br/><br/>
根据ID获取数据库单条记录
支持逻辑删除，如果查询到的记录已标记为删除则抛出异常<br/>
如果找不到记录也会抛出异常<br/>
只需要装载数据，可用selectByPrimaryKey方法<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
@see {MapperName}#selectByPrimaryKey({ParamType})
]]>
    </doc>
<!-- Mapper 代理方法 -->
    <doc key="selectMany" category="Repository" tag="SelectStatementProvider">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
单表查询的高阶用法，返回多条记录<br/>
手动组装查询条件，筛选列等<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="selectOne" category="Repository" tag="SelectStatementProvider">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
单表查询的高阶用法，返回单条记录<br/>
手动组装查询条件，筛选列等<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="count" category="Repository" tag="CountDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据CountDSLCompleter统计符合查询条件的记录总数<br/>
如果支持逻辑删除，需要确认逻辑删除标记位对查询结果的影响，合理设值<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#count({ParamList})
]]>
    </doc>
    <doc key="delete" category="Repository" tag="DeleteDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据DeleteDSLCompleter删除(物理)，并返回生效的记录数，谨慎使用<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#delete({ParamList})
]]>
    </doc>
    <doc key="deleteByPrimaryKey" category="Repository" tag="Long">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据主键ID删除（物理）记录，谨慎使用<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#deleteByPrimaryKey({ParamList})
]]>
    </doc>
    <doc key="insert" category="Repository" tag="row">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
新增数据库记录，单表操作，如果Entity数据有关联数据，不会插入<br/>
支持逻辑删除和乐观锁字段值的初始化<br/>
<br/>
<b color="#99FF99">>>可以使用<<</b>
@see {MapperName}#insert({ParamList})
@see {RepositoryName}#create({ParamList})
]]>
    </doc>
    <doc key="insertMultiple" category="Repository" tag="Collection">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
批量插入数据，参考insert方法<br/>
<br/>
<b color="#E63F00">>>可以使用<<</b>
@see {MapperName}#insertMultiple({ParamList})
]]>
    </doc>
    <doc key="insertSelective" category="Repository" tag="row">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
选择性插入，如果Entity中字段缺值，则改字段不会出现在生成的Insert语句中<br/>
支持逻辑删除和乐观锁字段值的初始化<br/>
但是考虑表字段新增字段可能非空，<b>不建议使用</b><br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#insertSelective({ParamList})
]]>
    </doc>
    <doc key="selectOne" category="Repository" tag="SelectDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据SelectDSLCompleter查询符合条件的单条记录，如果多条记录符合条件，抛出异常<br/>
如果支持逻辑删除，需要确认逻辑删除标记位对查询结果的影响，合理设值<br/>
<br/>
<b color="#E63F00">>>可以使用<<</b>
@see {MapperName}#selectOne({ParamList})
]]>
    </doc>
    <doc key="select" category="Repository" tag="SelectDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据SelectDSLCompleter查询符合条件的多条记录<br/>
如果支持逻辑删除，需要确认逻辑删除标记位对查询结果的影响，合理设值<br/>
<br/>
<b color="#E63F00">>>可以使用<<</b>
@see {MapperName}#select({ParamList})
]]>
    </doc>
    <doc key="selectDistinct" category="Repository" tag="SelectDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据SelectDSLCompleter查询符合条件的不重复的多条记录<br/>
如果支持逻辑删除，需要确认逻辑删除标记位对查询结果的影响，合理设值<br/>
<br/>
<b color="#E63F00">>>可以使用<<</b>
@see {MapperName}#selectDistinct({ParamList})
]]>
    </doc>
    <doc key="selectByPrimaryKey" category="Repository" tag="Long">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据ID获取数据库单条记录<br/>
如果支持逻辑删除，确认是否需要对数据状态对业务处理<br/>
<br/>
<b color="#E63F00">>>可以使用<<</b>
@see {MapperName}#selectByPrimaryKey({ParamList})
]]>
    </doc> 
    <doc key="update" category="Repository" tag="UpdateDSLCompleter">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据UpdateDSLCompleter生成Update语句进行数据库操作<br/>
逻辑删除或者乐观锁会受到影响<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#update({ParamList})
]]>
    </doc>  
    <doc key="updateByPrimaryKey" category="Repository" tag="row">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据ID根据数据库记录，如果Enity字段没有值，数据库库字段会被置为Null<br/>
乐观锁会受到影响<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#updateByPrimaryKey({ParamList})
]]>
    </doc>  
    <doc key="updateByPrimaryKeySelective" category="Repository" tag="row">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
根据ID根据数据库记录，如果Entity字段没有值，则不会更新<br/>
乐观锁会受到影响<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#updateByPrimaryKeySelective({ParamList})
]]>
    </doc>  
    <doc key="leftJoinSelect" category="Repository" tag="QueryExpressionDSL">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
关联查询，如果跟其他表有关联关系，则使用Left Join查询，返回多条记录<br/>
注意考虑到性能，不会查询一对多关联的表<br/>
支持对本表条件筛选、分页<br/>
请注意ResultSet, Entity关联映射，否则可能会抛出异常<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#leftJoinSelect({ParamList})
]]>
    </doc>  
    <doc key="leftJoinSelectOne" category="Repository" tag="QueryExpressionDSL">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
关联查询，如果跟其他表有关联关系，则使用Left Join查询，返回单条记录<br/>
默认采用本表的ID去筛选数据，多对一、一对多关联数据都会查询
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#leftJoinSelectOne({ParamList})
]]>
    </doc>
    <doc key="ignoreInsert" category="Repository" tag="InsertStatementProvider">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
选择插入，数据库中存在，则不插入-待完善<br/>
手动组装插入条件<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#ignoreInsert({ParamList})
]]>
    </doc>
    <doc key="ignoreInsert" category="Repository" tag="row">
        <![CDATA[
<b>MyBatis Mapper代理方法</b><br/><br/>
选择插入，数据库中存在，则不插入-待完善<br/>
根据Entity生成插入条件<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
@see {MapperName}#ignoreInsert({ParamList})
]]>
    </doc>
    <doc key="applyWhereBuilder" category="Repository">
        <![CDATA[
<b>MyBatis Mapper封装方法</b><br/><br/>
根据Entity构造Where条件<br/>
<br/>
<p color="#E63F00">>>推荐使用<<</p>
]]>
    </doc>
<!-- Service 方法 -->
    <doc key="select" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request构造Where查询符合条件的多条记录<br/>
单表查询，支持分页<br/>
如果启用逻辑删除，只查询非删除状态的记录<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
@see {RepositoryName}#select(SelectDSLCompleter)
]]>
    </doc>
    <doc key="list" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request构造Where查询符合条件的多条记录<br/>
如果包含关联表，则多表查询，支持分页<br/>
如果启用逻辑删除，只查询非删除状态的记录<br/>
返回结果为List，与page方法区别在是否包装返回结果<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="page" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request构造Where查询符合条件的多条记录<br/>
如果包含关联表，则多表查询，支持分页<br/>
如果启用逻辑删除，只查询非删除状态的记录<br/>
返回结果使用Page包装，方便前端显示<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="selectOne" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入的值构造Where查询符合条件的单条记录<br/>
如果包含关联表，则多表查询<br/>
注意与get方法的区别<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="count" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request构造Where查询符合条件的记录总数<br/>
如果启用逻辑删除，只统计非删除状态的记录<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="delete" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request构造Where查询条件并删除符合条件的记录<br/>
如果启用逻辑删除，需要谨慎使用<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="deleteById" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入的主键ID删除符合条件的单条记录<br/>
如果启用逻辑删除，只是更新记录的删除状态<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="batchDelete" category="Service">
        <![CDATA[
<b>Repository代理方法</b><br/><br/>
根据Request传入的主键ID集合批量删除对应记录<br/>
如果启用逻辑删除，只是更新记录的删除状态<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="create" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入的主键ID集合批量删除对应记录<br/>
如果启用逻辑删除，只是更新记录的删除状态<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="batchCreate" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
批量创建记录<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="get" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据传入的主键ID获取对应记录<br/>
如果包含关联表，则多表查询<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="getById" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入的主键ID获取对应记录<br/>
如果包含关联表，则多表查询<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="update" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
将Request传入值根据主键ID更新对应记录<br/>
支持乐观锁<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="updateByPrimaryKeySelective" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
将Request传入值根据主键ID选择性更新对应的字段值<br/>
支持支持乐观锁，谨慎使用<br/>
<br/>
<b color="#E63F00">>>谨慎使用<<</b>
]]>
    </doc>
    <doc key="defaultSelectDSL" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入值构造Where查询条件<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="defaultQuerySelectDSL" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入值生成SelectDSLCompleter<br/>
支持多表关联查询<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="applyWhereBuilder" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入值构造Where查询条件<br/>
如果启用逻辑删除，自动生成非删除状态的Where条件<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="getOrderBy" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
获取排序字段的工具方法
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="defaultCountDSL" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入值生成CountDSLCompleter<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
    <doc key="defaultDeleteDSL" category="Service">
        <![CDATA[
<b>Service封装方法</b><br/><br/>
根据Request传入值生成DeleteDSLCompleter<br/>
<br/>
<b color="#99FF99">>>建议使用<<</b>
]]>
    </doc>
</docs>